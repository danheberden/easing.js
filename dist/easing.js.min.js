/*! Easing Plugin - v1.1.0 - 2/8/2012
* https://github.com/danheberden/easing.js
* Copyright (c) 2012 Dan Heberden; Licensed MIT */
(function(a){var b=a.easing=function(a,d,f,g){var h=/(InOut|In|Out)(\w+)?/.exec(a),i=c.In,j,k;return f=f||0,g=g||1,h&&(k=h[2],j=e[k],i=c[h[1]]),j=j||[],a.call||(a=j[0]||b.easings[a]||function(a){return a}),d<=0?f:d>=1?g:i(a,d,j[1],j[2])*(g-f)+f},c={In:function(a,b,c,d){return a(b,c,d)},Out:function(a,b,c,d){return 1-a(1-b,c,d)},InOut:function(a,b,c,d){return b<.5?a(b*2,c,d)/2:a(b*-2+2,c,d)/-2+1}},d={s:function(a,b,c){return 1-Math.pow(Math.sqrt(1-Math.pow(a,b||2)),c||2)},e:function(a,b){return Math.sin(Math.PI*2-a*Math.PI*(b+b-.5))*d.s(a,2,1)*.97},b:function(a,b){var c=4/7+b/50,e=1+a/(c/(Math.pow(2,b)-1)),f=~~(Math.log(e)/Math.log(2));return a>c?1-d.s(1-(-c+a)/(1-c),2):Math.sqrt(1-Math.pow(2*(e/Math.pow(2,f)-1)-1,2))*d.s((f+1)/b*c,3)},back:function(a){return a*a*(3*a-2)}},e=b.mappings={Quad:[d.s,2],Cubic:[d.s,3],Quart:[d.s,4],Quint:[d.s,5],Expo:[d.s,6,1],Sine:[d.s,2],Circ:[d.s,2,1],Elastic:[d.e,3],Bounce:[d.b,3],Back:[d.back]},f=a.jQuery;for(var g=1;g<7;g++)e[g]=[d.s,g+1,g>4?1:2];b.easings={},f&&f.each(e,function(a){f.each(c,function(c){var d="ease"+c+a;f.easing[d]=function(a,c,e,f,g){return b(d,c/g,e,f-e)}})})})(this)